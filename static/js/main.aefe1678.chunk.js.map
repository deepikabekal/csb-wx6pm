{"version":3,"sources":["components/Header/Icons.js","components/Header/Navigation.js","components/Avatar.js","components/Header/index.js","components/Button.js","components/Journaux/NomenclatureData.js","components/Journaux/JournauxTabs.js","components/TempPage/index.js","components/TeamSection/ResourcePlanning/ResourceCard.js","components/employees.js","components/TeamSection/PlanningGraph/Column.js","components/TeamSection/PlanningGraph/Dates.js","components/TeamSection/PlanningGraph/Graph.js","components/TeamSection/PlanningGraph/BudgetInfo.js","components/TeamSection/PlanningGraph/ToggleBar.js","components/TeamSection/PlanningGraph/TimeSheet.js","components/TeamSection/PlanningGraph/index.js","components/TeamSection/ResourcePlanning/ResourceListSection.js","components/TeamSection/ResourcePlanning/index.js","components/TeamSection/Equipe/index.js","components/TeamSection/index.js","components/Journaux/IndivSection.js","components/Journaux/JournauxTabSections.js","components/Journaux/index.js","components/LeftMenu/TitleBlock.js","components/LeftMenu/LeftMenuData.js","components/LeftMenu/LeftMenuList.js","components/LeftMenu/index.js","components/Task/TaskHeader.js","components/Task/TaskCard.js","components/Task/index.js","components/Main.js","App.js","index.js"],"names":["navIcons","faSearch","faBell","faQuestionCircle","faCog","faPlusSquare","Icons","className","map","item","index","icon","toString","Navigation","id","navName","navURL","href","Avatar","props","src","imageURL","alt","altValue","Header","Button","type","btnClass","onClick","iconClass","name","NomenclatureData","faFileAlt","displayValue","faCircle","faUsers","faEnvelopeOpenText","faStopwatch","faCalendarAlt","faTasks","faThList","JournauxTabs","tabName","TempPage","calledFrom","ResourceCard","empClass","desigClass","employeeName","designation","employees","Column","style","background","barFillColor","barFillPercent","faPlus","faMinus","color","date","month","dates","fill","Graph","BudgetInfo","time","toggleBtnList","backGroundColor","ToggleBar","backgroundColor","TimeSheet","faChevronLeft","faChevronRight","PlanningGraph","ResourceListSection","console","log","clickedName","ResourcePlanning","Equipe","TeamSection","useState","setClickedName","event","target","IndivSection","JournauxTabSections","Journaux","clickedBtn","setClickedBtn","faSync","faPen","TitleBlock","faStar","faArrowRight","LeftMenuData","LeftMenuList","menuData","clickedItem","employee","LeftMenu","TaskHeader","faFileImport","TaskCard","Task","count","setCount","setIsChecked","onChange","checked","box","document","getElementsByClassName","i","selectAll","deSelectAll","htmlFor","Array","_","Main","elementId","setElementId","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.aefe1678.chunk.js","sourcesContent":["// This component creates all the header icons which are imported from fontawesome\r\n// The imported icons then stored in a variable navIcons\r\n// Using map function on navIcons the header element icons are created\r\n//This component is then rendered in index,js file of the Header folder.\r\n\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSearch,\r\n  faBell,\r\n  faQuestionCircle,\r\n  faCog,\r\n  faPlusSquare\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nconst navIcons = [faSearch, faBell, faQuestionCircle, faCog, faPlusSquare];\r\nfunction Icons() {\r\n  return (\r\n    <div className=\"inline-fx align-center\">\r\n      {navIcons.map(function (item, index) {\r\n        return (\r\n          <div className=\"icon-div\" key={index.toString()}>\r\n            <FontAwesomeIcon icon={item} className={`icon-${index}`} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Icons;\r\n","// This component creates the header navigation links.\r\n// navLinksInfo variable is an array of objects that store the data for each link\r\n// The links are created using map function on the navLinksInfo array.\r\n//This component is rendered in index.js of the Header folder\r\n\r\nimport React from \"react\";\r\n\r\nfunction Navigation() {\r\n  let navLinksInfo = [\r\n    { id: 1, navName: \"Clients\", navURL: \"#clients\" },\r\n    { id: 2, navName: \"Missions\", navURL: \"#missions\" },\r\n    { id: 3, navName: \"Tâches\", navURL: \"#tâches\" },\r\n    { id: 4, navName: \"Équipe\", navURL: \"#equipe\" },\r\n    { id: 5, navName: \"Temps\", navURL: \"#temps\" },\r\n    { id: 6, navName: \"Analyse\", navURL: \"#analyse\" }\r\n  ];\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"header-list\">\r\n        {navLinksInfo.map((item) => (\r\n          <li key={item.id.toString()} className=\"li-style\">\r\n            <a className=\"nav-link\" href={item.navURL}>\r\n              {item.navName}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","// This component creates the avatar for employees image\r\n//and is then rendered in multiple sections\r\n\r\nimport React from \"react\";\r\n\r\nfunction Avatar(props) {\r\n  return (\r\n    <img\r\n      className={props.className}\r\n      src={props.imageURL}\r\n      alt={props.altValue}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Avatar;\r\n","// Here all the components are imported and placed such that Header section is created\r\n\r\nimport React from \"react\";\r\nimport Icons from \"./Icons\";\r\nimport Navigation from \"./Navigation\";\r\nimport Avatar from \"../Avatar\";\r\nimport \"./header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"div-border\">\r\n      <div className=\"inline-fx align-center\">\r\n        {/* logo is rendered */}\r\n        <img\r\n          src=\"../../assets/images/logo.png\"\r\n          alt=\"logo\"\r\n          className=\"logo-img\"\r\n        />\r\n        <Navigation id=\"navigation\" />\r\n      </div>\r\n      <div className=\"inline-fx\">\r\n        <Icons className=\"icon-style\" />\r\n        {/* The user data is passed to the Avatar component to render the user image */}\r\n        <Avatar\r\n          className=\"user-img\"\r\n          imageURL=\"../assets/images/employee-profile.png\"\r\n          altValue=\"Female Employee\"\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","// this component created the button for various sections\r\n// the data is passed as props from the section where the component is rendered\r\n\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n//import { faPlus, faMinus, faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={props.btnClass}\r\n      onClick={props.onClick}\r\n      id={props.id}\r\n    >\r\n      <FontAwesomeIcon\r\n        icon={props.icon}\r\n        className={props.iconClass}\r\n        // onClick={props.onClick}\r\n      />\r\n      {props.name}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","//This is data file\r\n//It has all the data in the for of array which is used to render the tabs using map function\r\n\r\nimport {\r\n  faFileAlt,\r\n  faCircle,\r\n  faUsers,\r\n  faEnvelopeOpenText,\r\n  faStopwatch,\r\n  faCalendarAlt,\r\n  faTasks,\r\n  faThList\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nconst NomenclatureData = [\r\n  {\r\n    id: 1,\r\n    name: \"Description\",\r\n    icon: faFileAlt,\r\n    displayValue: null\r\n  },\r\n  { id: 2, name: \"Statut\", icon: faCircle, displayValue: null },\r\n  { id: 3, name: \"Équipe\", icon: faUsers, displayValue: \"Gabrielle Chevalier\" },\r\n  {\r\n    id: 4,\r\n    name: \"Honoraires\",\r\n    icon: faEnvelopeOpenText,\r\n    displayValue: \"100 € / h\"\r\n  },\r\n  { id: 5, name: \"Durée\", icon: faStopwatch, displayValue: \"2 h\" },\r\n  { id: 6, name: \"Dates\", icon: faCalendarAlt, displayValue: \"11 / 11 / 2020\" },\r\n  { id: 7, name: \"Checklist\", icon: faTasks, displayValue: \"1 / 5\" },\r\n  { id: 8, name: \"Champs\", icon: faThList, displayValue: null }\r\n];\r\n\r\nexport default NomenclatureData;\r\n","//In this component button/tabs for the button bar in the Journaux section is created.\r\n//.map function is used on NamenclatureData array\r\n//(which contains all the data for the tabs) to render the tabs.\r\n//Button component is imported and the necessary data is passed in to it to create the buton/tabs\r\n//Using ternary operator the classNames are passed conditionally\r\n//If the tabName (clicked) is equal to the array item name\r\n//then the click-tab-styles class is added which has styles for the button when clicked\r\n\r\nimport React from \"react\";\r\nimport Button from \"../Button\";\r\nimport NomenclatureData from \"./NomenclatureData\";\r\n\r\nfunction JournauxTabs(props) {\r\n  return (\r\n    <div className=\"nomenclature-bar div-border\">\r\n      {NomenclatureData.map((item) => (\r\n        <Button\r\n          key={item.id}\r\n          btnClass={\r\n            props.tabName === item.name\r\n              ? \"nomenclature-btn btn click-tab-styles\"\r\n              : \"nomenclature-btn btn\"\r\n          }\r\n          icon={item.icon}\r\n          iconClass=\"nomenclature-icon\"\r\n          name={item.name}\r\n          id={item.name}\r\n          onClick={props.onClick}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JournauxTabs;\r\n","// This is a component that contains the message\r\n//That lets the user know that section or page is under development\r\n//This component is added in 2 different sections\r\n//hence the ternary operator is used to render appropriate elements\r\n//depending on whether the element is added in leftmenu or not\r\n//calledFrom is passed as props where the component element is added with a string value\r\n\r\nimport React from \"react\";\r\nimport \"./TempPageStyle.css\";\r\n\r\nfunction TempPage(props) {\r\n  return (\r\n    <>\r\n      {props.calledFrom === \"leftmenu\" ? (\r\n        <div>\r\n          <div className=\"temp-page-header pad-left-15\">\r\n            <h2 className=\"temp-page-heading\">{props.name}</h2>\r\n          </div>\r\n          <div>\r\n            <p className=\"user-msg pad-left-15\">Page under development </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p className=\"user-msg pad-left-15\">Page under development </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TempPage;\r\n","// This component creates the employee list/card\r\n//with employee image, name and designation\r\n//This component is rendered in LeftMenu component and ResourceListSection component\r\n//which is below equipe section\r\n// The data is passed as props from the section where this component is rendered\r\n\r\nimport React from \"react\";\r\n\r\nfunction ResourceCard(props) {\r\n  const empClass = props.empClass;\r\n  const desigClass = props.desigClass;\r\n  return (\r\n    <li\r\n      className=\"resource-list-div div-border\"\r\n      onClick={props.onClick}\r\n      id={props.id}\r\n    >\r\n      <div className={props.className}>\r\n        <img\r\n          src={props.imageURL}\r\n          alt=\"employee of the company\"\r\n          className=\"pad-left-15\"\r\n        />\r\n      </div>\r\n      <div className=\"resource-info-div\">\r\n        <p className={empClass}>{props.employeeName}</p>\r\n        <p className={desigClass}>{props.designation}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n//require(`../assets/images/${props.imgName}`\r\nexport default ResourceCard;\r\n","// Array of abjects with all the employees data\r\n\r\nconst employees = [\r\n  {\r\n    id: 1,\r\n    imageURL: \"../assets/images/employee-1.jpg\",\r\n    employeeName: \"Gabrielle Chevalier\",\r\n    designation: \"Assistant comptable\"\r\n  },\r\n  {\r\n    id: 2,\r\n    imageURL: \"../assets/images/employee-2.jpg\",\r\n    employeeName: \"Marc Chapuis\",\r\n    designation: \"Assistant comptable\"\r\n  },\r\n  {\r\n    id: 3,\r\n    imageURL: \"../assets/images/employee-3.jpg\",\r\n    employeeName: \"Giselle Bissonnette\",\r\n    designation: \"Assistant comptable\"\r\n  },\r\n  {\r\n    id: 4,\r\n    imageURL: \"../assets/images/employee-4.jpg\",\r\n    employeeName: \"Mathieu Ancel\",\r\n    designation: \"Assistant comptable\"\r\n  },\r\n  {\r\n    id: 5,\r\n    imageURL: \"../assets/images/employee-5.jpg\",\r\n    employeeName: \"Marie-Noëlle Auvray\",\r\n    designation: \"Assistant comptable\"\r\n  },\r\n  {\r\n    id: 6,\r\n    imageURL: \"../assets/images/employee-6.jpg\",\r\n    employeeName: \"Nicole Gounelle\",\r\n    designation: \"Assistant comptable\"\r\n  },\r\n  {\r\n    id: 7,\r\n    imageURL: \"../assets/images/employee-7.jpg\",\r\n    employeeName: \"Natacha Corriveau\",\r\n    designation: \"Assistant comptable\"\r\n  }\r\n];\r\n\r\nexport default employees;\r\n","//This component creates the column for the graph\r\n// It is rendered in the Graph component.\r\n\r\nimport React from \"react\";\r\nimport Button from \"../../Button\";\r\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Column(props) {\r\n  const fontColor = \"#F27633\";\r\n  return (\r\n    <div>\r\n      <div className=\"col-bar\">\r\n        <div\r\n          className=\"bar\"\r\n          style={{\r\n            background: `linear-gradient(to top, ${props.barFillColor} 0, ${props.barFillColor} ${props.barFillPercent}%, #F1F0FA ${props.barFillPercent}%, #F1F0FA  100%)`\r\n          }}\r\n        ></div>\r\n\r\n        {/* plus minu button of the bar is created by using Button component */}\r\n        <div className=\"graph-buttons\">\r\n          <Button\r\n            btnClass=\"inc-dec-btn\"\r\n            icon={faPlus}\r\n            iconClass=\"graph-btn-icon\"\r\n          />\r\n          <Button\r\n            btnClass=\"inc-dec-btn\"\r\n            icon={faMinus}\r\n            iconClass=\"graph-btn-icon\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* creates the date section (date and month)  */}\r\n      <div\r\n        className=\"date-div\"\r\n        style={{ color: props.date === 10 && fontColor }}\r\n      >\r\n        <span>{props.date}</span>\r\n        <span>{props.month}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Column;\r\n","// Array with all the graph data\r\n\r\nconst dates = [\r\n  {\r\n    date: 28,\r\n    month: \"Fév\",\r\n    fill: 70,\r\n    color: \"#B7BAD6\"\r\n  },\r\n  {\r\n    date: 1,\r\n    month: \"Mar\",\r\n    fill: 70,\r\n    color: \"#B7BAD6\"\r\n  },\r\n  {\r\n    date: 2,\r\n    month: \"Mar\",\r\n    fill: 70,\r\n    color: \"#B7BAD6\"\r\n  },\r\n  {\r\n    date: 3,\r\n    month: \"Mar\",\r\n    fill: 70,\r\n    color: \"#B7BAD6\"\r\n  },\r\n  {\r\n    date: 4,\r\n    month: \"Mar\",\r\n    fill: 70,\r\n    color: \"#B7BAD6\"\r\n  },\r\n  {\r\n    date: 5,\r\n    month: \"Mar\",\r\n    fill: 100,\r\n    color: \"#f36181\"\r\n  },\r\n  {\r\n    date: 6,\r\n    month: \"Mar\",\r\n    fill: 100,\r\n    color: \"#F1F0FA\"\r\n  },\r\n  {\r\n    date: 7,\r\n    month: \"Mar\",\r\n    fill: 100,\r\n    color: \"#F1F0FA\"\r\n  },\r\n  {\r\n    date: 8,\r\n    month: \"Mar\",\r\n    fill: 50,\r\n    color: \"#34344B\"\r\n  },\r\n  {\r\n    date: 9,\r\n    month: \"Mar\",\r\n    fill: 30,\r\n    color: \"#F27633\"\r\n  },\r\n  {\r\n    date: 10,\r\n    month: \"Mar\",\r\n    fill: 100,\r\n    color: \"#f36181\"\r\n  },\r\n  {\r\n    date: 11,\r\n    month: \"Mar\",\r\n    fill: 100,\r\n    color: \"#F1F0FA\"\r\n  },\r\n  {\r\n    date: 12,\r\n    month: \"Mar\",\r\n    fill: 100,\r\n    color: \"#F1F0FA\"\r\n  },\r\n  {\r\n    date: 13,\r\n    month: \"Mar\",\r\n    fill: 100,\r\n    color: \"#F1F0FA\"\r\n  }\r\n];\r\n\r\nexport default dates;\r\n","// This component creates the Graph\r\n//Using map function on the dates array each column element is created\r\n// Column element is imported and all the necessay data is passed as props\r\n\r\nimport React from \"react\";\r\nimport Column from \"./Column\";\r\nimport dates from \"./Dates\";\r\n\r\nfunction Graph() {\r\n  return (\r\n    <div className=\"graph-div\">\r\n      {dates.map((item) => (\r\n        <Column\r\n          key={item.date}\r\n          barFillColor={item.color}\r\n          barFillPercent={item.fill}\r\n          date={item.date}\r\n          month={item.month}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n","//This component creates the Budget info (right-part) of the TimeSheet section\r\n//budgetData is an array of the data that needs to be displayed in the section\r\n//The budget list is created using map function on budgetData array\r\n\r\nimport React from \"react\";\r\n\r\nfunction BudgetInfo() {\r\n  const budgetData = [\r\n    { name: \"Budget restant\", time: \"20 h\" },\r\n    { name: \"Disponibilité restante\", time: \"6 h\" },\r\n    { name: \"Planifié sur d’autres tâches\", time: \"2 h\" },\r\n    { name: \"Planifié sur cette tâche\", time: \"2 h\" }\r\n  ];\r\n  return (\r\n    <ul className=\"budget-div\">\r\n      {budgetData.map(function (item, index) {\r\n        return (\r\n          <li className=\"budget-list\" key={index}>\r\n            <div className=\"budget-item\">\r\n              <span>{item.name}</span>\r\n              <span>{item.time}</span>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default BudgetInfo;\r\n","// This component creates the toggle bar section at the bottom of the budget section\r\n//toggleBtnList contains the data for the button\r\n//Using map function on toggleBtnList each button is created\r\n\r\nimport React from \"react\";\r\nconst toggleBtnList = [\r\n  { id: 1, name: \"Manuel\", backGroundColor: \"rgba(214, 219, 227, 1)\" },\r\n  { id: 2, name: \"|->\", backGroundColor: \"rgba(255, 255, 255, 1)\" },\r\n  { id: 3, name: \"<->\", backGroundColor: \"rgba(255, 255, 255, 1)\" },\r\n  { id: 4, name: \"<-|\", backGroundColor: \"rgba(255, 255, 255, 1)\" }\r\n];\r\nfunction ToggleBar() {\r\n  return (\r\n    <div className=\"togglebar-div\" style={{ backGroundColor: \"red\" }}>\r\n      {toggleBtnList.map((item) => (\r\n        <button\r\n          type=\"button\"\r\n          key={item.id}\r\n          style={{ backgroundColor: item.backGroundColor }}\r\n          className=\"toggle-btn\"\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToggleBar;\r\n","// This component creates the right section of the Graph (where there is budget)\r\n// Various components are imported to be rendered as TimeSheet section\r\n\r\nimport React from \"react\";\r\nimport Button from \"../../Button\";\r\nimport BudgetInfo from \"./BudgetInfo\";\r\nimport ToggleBar from \"./ToggleBar\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction TimeSheet() {\r\n  return (\r\n    <div className=\"timesheet-section\">\r\n      {/* date scroll section */}\r\n      <div className=\"timesheet-btn-div\">\r\n        <Button\r\n          icon={faChevronLeft}\r\n          btnClass=\"inc-dec-btn\"\r\n          iconClass=\"budget-btn-icon\"\r\n        />\r\n        <span className=\"date-span\">11/11/2020 - 11/11/2020</span>\r\n        <Button\r\n          icon={faChevronRight}\r\n          btnClass=\"inc-dec-btn\"\r\n          iconClass=\"budget-btn-icon\"\r\n        />\r\n      </div>\r\n      <BudgetInfo />\r\n      <ToggleBar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeSheet;\r\n","// This component creates the whole Planning Graph section\r\n// by rendering Graph and TimeSheet elements which are imported\r\n\r\nimport React from \"react\";\r\nimport Graph from \"./Graph\";\r\nimport TimeSheet from \"./TimeSheet\";\r\nimport \"./GraphStyles.css\";\r\n\r\nfunction PlanningGraph() {\r\n  return (\r\n    <div className=\"section-div\">\r\n      <Graph />\r\n      <TimeSheet />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlanningGraph;\r\n","// This component creates the resource list section in the Equipe section\r\n//employees is an array of employee information objects\r\n//Using map function on employees each list is created\r\n//clickedName prop holds the name of the employee that has been clicked\r\n//if clickedName is equal to employee name of the array item\r\n//then PlanningGraph component is rendered below the clicked resouce list\r\n\r\nimport React from \"react\";\r\nimport ResourceCard from \"./ResourceCard\";\r\nimport employees from \"../../employees\";\r\nimport PlanningGraph from \"../PlanningGraph\";\r\n\r\nfunction ResourceListSection(props) {\r\n  console.log(props.clickedName);\r\n  return (\r\n    <div className=\"resource-list-container\">\r\n      {employees.map((item) => (\r\n        <div key={item.id}>\r\n          <ResourceCard\r\n            imageURL={item.imageURL}\r\n            employeeName={item.employeeName}\r\n            designation={item.designation}\r\n            onClick={props.onClick}\r\n            id={item.employeeName}\r\n            className=\"resource-img-div margin-left-20\"\r\n            empClass=\"resource-name\"\r\n            desigClass=\"resource-desig\"\r\n          />\r\n\r\n          {props.clickedName === item.employeeName && <PlanningGraph />}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResourceListSection;\r\n","// In this component resource planning section is render.\r\n//The section below Equipe section.\r\n//The props are passed from the index.js file of the TeamSection component\r\n//where the state is managed for onClick event\r\n//clickedName will get the name of the employee list thats clicked\r\nimport React from \"react\";\r\nimport ResourceListSection from \"./ResourceListSection\";\r\nimport \"./ResourceSection.css\";\r\n\r\nfunction ResourcePlanning(props) {\r\n  return (\r\n    <ResourceListSection\r\n      onClick={props.onClick}\r\n      clickedName={props.clickedName}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ResourcePlanning;\r\n","//This component creates the Equipe section for the Journaux section\r\n//This component will be rendered in IndivSection component\r\n//where the respective sections are displayed based on the tab/button click\r\nimport React from \"react\";\r\nimport \"./EquipeStyles.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Equipe() {\r\n  // data for the toggle button bar\r\n  const toggleBtn = [\r\n    { id: 1, name: \"Profil\" },\r\n    { id: 2, name: \"Ressource\" },\r\n    { id: 3, name: \"Champ\" },\r\n    { id: 4, name: \"Référence\" }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"equipe-div div-border\">\r\n      <div className=\"div-border\">\r\n        {/* toggle button bar is created using map function on toggleBtn data array */}\r\n        <div className=\"toggle-btn-bar\">\r\n          {toggleBtn.map((item) => (\r\n            <button\r\n              key={item.id}\r\n              type=\"button\"\r\n              className=\"equipe-toggle-btn btn\"\r\n            >\r\n              {item.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* poste and site section */}\r\n        <div className=\"post-site-div\">\r\n          <span className=\"label-span\">Poste</span>\r\n          <span className=\"value-span\">Assistant comptable</span>\r\n        </div>\r\n        <div className=\"post-site-div\">\r\n          <span className=\"label-span\">Site </span>\r\n          <span className=\"value-span\">Paris</span>\r\n        </div>\r\n\r\n        {/*  Ajouter un filtre section */}\r\n        <p className=\"equipe-plus\">\r\n          <FontAwesomeIcon icon={faPlus} className=\"equipe-plus-icon\" /> Ajouter\r\n          un filtre\r\n        </p>\r\n      </div>\r\n\r\n      {/* nom section */}\r\n      <div className=\"nom-div \">\r\n        <p className=\"nom-p-tag\">Nom</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Equipe;\r\n","// In this component the Equipe section and the ResourcePlanning sections are integrated\r\n//useState hook is used to manage the state for onClick event and re-render appropriate elements\r\n//When the user clicks on the employee list, the id of the employee list\r\n//gets stored in the clickedName variable by the setClickedName function\r\n//this is then passed to the ResourcePlanning section where the appropriate\r\n//component will rendered\r\n\r\nimport { React, useState } from \"react\";\r\nimport ResourcePlanning from \"./ResourcePlanning\";\r\nimport Equipe from \"./Equipe\";\r\n\r\nfunction TeamSection() {\r\n  const [clickedName, setClickedName] = useState(\"\");\r\n\r\n  function renderGraph(event) {\r\n    setClickedName(event.target.id);\r\n  }\r\n  return (\r\n    <>\r\n      <Equipe />\r\n      <ResourcePlanning onClick={renderGraph} clickedName={clickedName} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TeamSection;\r\n","// In this component individual sections for each tab of the button bar\r\n//in the right panel (Journaux) is created\r\n//Depending on the tab that is clicked their respective sections are displayed\r\n//If tabName which is passed as props from the JournauxTabSections is equal to Équipe\r\n//Then TeamSection component is rendered else TempPage component is rendered\r\n//For all other tabs since there is no design \"Page under development\" message\r\n//is displayed using TempPage component\r\n//journaux string is passed as props to add appropriate style for the temppage.\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport TempPage from \"../TempPage\";\r\nimport TeamSection from \"../TeamSection\";\r\nfunction IndivSection({ item, tabName }) {\r\n  // console.log(item);\r\n  return (\r\n    <div>\r\n      <div className=\"button-bar-section pad-left-15 div-border\">\r\n        <FontAwesomeIcon icon={item.icon} className=\"tab-section-icon\" />\r\n        <span className=\"tab-section-name\">{item.name}</span>\r\n        <span className=\"tab-section-value\">{item.displayValue}</span>\r\n      </div>\r\n      <div>\r\n        {tabName === \"Équipe\" ? (\r\n          <TeamSection id=\"Equipe\" />\r\n        ) : (\r\n          <TempPage calledFrom=\"journaux\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IndivSection;\r\n","// NomenclatureData has the data related to each section\r\n//respective to the tabs in the button bar section of Journaux\r\n//IndivSection component, which creates each section is imported\r\n//Using map function on the NomenclatureData array, IndivSection component is rendered\r\n//Each item of the array matched with the tabName props to render the respective section\r\nimport React from \"react\";\r\nimport NomenclatureData from \"./NomenclatureData\";\r\nimport IndivSection from \"./IndivSection\";\r\n\r\nfunction JournauxTabSections(props) {\r\n  return (\r\n    <>\r\n      {NomenclatureData.map((item) => (\r\n        <div key={item.id}>\r\n          {props.tabName === item.name && (\r\n            <IndivSection tabName={props.tabName} item={item} />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JournauxTabSections;\r\n","//Here the different components of the Journaux section is imported\r\n//Then they are rendered appropriately with the Journaux header\r\n//onClick event is passed as props to the JournauxTabs component\r\n//useState hook is used to manage the state ( which tab is clicked )\r\n//The clicked tab's name is passed as tabName to the respective components\r\n\r\nimport { React, useState } from \"react\";\r\nimport Button from \"../Button\";\r\nimport JournauxTabs from \"./JournauxTabs\";\r\nimport JournauxTabSections from \"./JournauxTabSections\";\r\nimport \"./JournauxStyles.css\";\r\nimport { faSync, faPen } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Journaux() {\r\n  const [clickedBtn, setClickedBtn] = useState(\"Équipe\");\r\n\r\n  function renderPage(event) {\r\n    setClickedBtn(event.target.id);\r\n    //console.log(event.target.id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"journaux-container\">\r\n      {/* Journaux header */}\r\n      <div className=\"journaux-header div-border pad-left-15\">\r\n        <Button btnClass=\"icon-btn\" icon={faSync} iconClass=\"sync-icon-style\" />\r\n        <h2 className=\"section-heading\">Tenue des journaux</h2>\r\n        <Button btnClass=\"icon-btn\" icon={faPen} iconClass=\"pen-icon-style\" />\r\n      </div>\r\n      {/* Journaux header end */}\r\n      <JournauxTabs onClick={renderPage} tabName={clickedBtn} />\r\n      <JournauxTabSections tabName={clickedBtn} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Journaux;\r\n","// In this component the title block of the left menu section (top part) is created\r\n// This component is rendered in the index.js file of the LeftMenu folder\r\n\r\nimport React from \"react\";\r\nimport { faStar, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction TitleBlock() {\r\n  return (\r\n    <div className=\"title-block-container div-border\">\r\n      <div className=\"title-container div-border pad-left-15\">\r\n        <div className=\"title-icon-container \">\r\n          <h2 className=\"title-block-heading\">Titre</h2>\r\n          <FontAwesomeIcon icon={faStar} className=\"star-icon\" />\r\n        </div>\r\n        <span className=\"client-name\">Client Name</span>\r\n      </div>\r\n      {/* debut and fin section */}\r\n      <div className=\"menu-link-container \">\r\n        <div className=\"debut-container\">\r\n          <span className=\"link-span\">DÉBUT</span>\r\n          <span className=\"title-date-span\">11 / 11 / 2020</span>\r\n        </div>\r\n        <div className=\"arrow-icon-container\">\r\n          <FontAwesomeIcon icon={faArrowRight} className=\"arrow-icon\" />\r\n        </div>\r\n        <div className=\"fin-container\">\r\n          <span className=\"link-span\">FIN</span>\r\n          <span className=\"title-date-span\">11 / 11 / 2020</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TitleBlock;\r\n","//This is a data file\r\n//It contains all the data needed to render the left menu bar tabs\r\n\r\nconst LeftMenuData = [\r\n  \"Informations\",\r\n  \"Honoraires\",\r\n  \"Tâches\",\r\n  \"Dépenses\",\r\n  \"Factures\",\r\n  \"Fichiers\",\r\n  \"Export\",\r\n  \"Paramètres\"\r\n];\r\n\r\nexport default LeftMenuData;\r\n","//In this component the tabs on the left menu is created\r\n//using map function on menuData array which contains all necessary data\r\n//clickedItem contains the name of the tab that is clicked,\r\n//which is passed as props from index.js file (where this element is called)\r\n//If the name in the clickedItem is same as the item in the array\r\n//then click-styles classname is added.\r\n//click-styles has the styles for the clicked tab\r\nimport React from \"react\";\r\nimport menuData from \"./LeftMenuData\";\r\n\r\nfunction LeftMenuList(props) {\r\n  return (\r\n    <>\r\n      {menuData.map((item, index) => (\r\n        <li\r\n          key={index}\r\n          className={`menu-list-container div-border pad-left-15 ${\r\n            props.clickedItem === item ? \"click-styles\" : \"\"\r\n          }`}\r\n          onClick={props.onClick}\r\n          id={item}\r\n        >\r\n          {item}\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LeftMenuList;\r\n","//Here the different components of the Left Menu panel section is imported\r\n//ResourceCard component is used to display the project owner section\r\n//The onClick and clickediTem props are passed from Main.js file\r\n//where the state is managed using onClick even\r\n\r\nimport React from \"react\";\r\nimport \"./LeftMenuStyles.css\";\r\nimport TitleBlock from \"./TitleBlock\";\r\nimport ResourceCard from \"../TeamSection/ResourcePlanning/ResourceCard\";\r\nimport LeftMenuList from \"./LeftMenuList\";\r\nimport employees from \"../employees\";\r\nconst employee = employees[0];\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <div>\r\n      <TitleBlock />\r\n\r\n      {/* project button section ouvert and ferme*/}\r\n      <button className=\"project-btn open-btn\" type=\"button\">\r\n        Ouvert\r\n      </button>\r\n      <button className=\"project-btn close-btn\" type=\"button\">\r\n        Fermé\r\n      </button>\r\n\r\n      {/* Project owner section begins */}\r\n      <ResourceCard\r\n        imageURL={employee.imageURL}\r\n        employeeName={employee.employeeName}\r\n        designation={employee.designation}\r\n        empClass=\"resource-name emp-card-name\"\r\n        desigClass=\"resource-desig emp-card-desig\"\r\n      />\r\n      <LeftMenuList onClick={props.onClick} clickedItem={props.clickedItem} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeftMenu;\r\n","// this component creates the header for the Task section\r\n// the onClick event is passed as props  from the index.js\r\n//where this component is rendered.\r\n//onClick event is for adding TaskCards to the section\r\n\r\nimport React from \"react\";\r\nimport { faFileImport, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction TaskHeader({ onClick }) {\r\n  return (\r\n    <div className=\"task-header-container pad-left-15\">\r\n      <h2 className=\"task-heading\">Tâches</h2>\r\n      <div className=\"task-header-icons\">\r\n        <FontAwesomeIcon icon={faFileImport} className=\"task-header-icon\" />\r\n        <FontAwesomeIcon\r\n          onClick={onClick}\r\n          icon={faPlus}\r\n          className=\"task-header-icon\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskHeader;\r\n","// this component creates each task card\r\n//which is rendered when the + button is clicked\r\n\r\nimport React from \"react\";\r\n\r\nfunction TaskCard() {\r\n  return (\r\n    <div className=\"task-card-container\">\r\n      <div className=\"checkbox-container\">\r\n        <input className=\"check-box indiv-check-box\" type=\"checkbox\" />\r\n      </div>\r\n      <div className=\"task-card\">\r\n        <button type=\"button\" className=\"card-button \">\r\n          15 NOV\r\n        </button>\r\n        <div className=\"task-card-content\">\r\n          <p className=\"content-1\">Tenue des journaux</p>\r\n          <p className=\"content-2\">Gabrielle Chevalier</p>\r\n          <p className=\"content-3\">Documents en attente</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskCard;\r\n","// This component renders the Task component\r\n\r\nimport { React, useState, useEffect } from \"react\";\r\nimport \"./TaskStyles.css\";\r\nimport TaskHeader from \"./TaskHeader\";\r\nimport TaskCard from \"./TaskCard\";\r\n\r\nfunction Task(props) {\r\n  let [count, setCount] = useState(0); // for + click\r\n  const [isChecked, setIsChecked] = useState(false); //for select all checkbox click\r\n\r\n  // This function will be called when the + button is clicked\r\n  // for every click, count will be incremented by 1 and the state change will be recorded\r\n\r\n  function addCard() {\r\n    setCount(count + 1);\r\n  }\r\n\r\n  // This function is called when the onChange event is triggered (select all checkbox is checked)\r\n  //if the select all check box is checked (true) then state is changed\r\n  // selectAll function is called else the state is changed and deSelectAll function is called\r\n  function checkboxClick(event) {\r\n    if (event.target.checked) {\r\n      setIsChecked(true);\r\n      selectAll();\r\n    } else {\r\n      setIsChecked(false);\r\n      deSelectAll();\r\n    }\r\n  }\r\n\r\n  // This function will be called when the select all checkbox is checked\r\n  //Using for loop all the other checkboxes in the Task section will be checked\r\n  //The count variable has the number of task\r\n  function selectAll() {\r\n    const box = document.getElementsByClassName(\"indiv-check-box\");\r\n    for (var i = 0; i < count; i++) {\r\n      box[i].checked = true;\r\n    }\r\n  }\r\n\r\n  // this function is called when the select all checkbox is unchecked\r\n  //Using for loop all the other checkboxes in the Task section will be unchecked\r\n  //The count variable has the number of task\r\n  function deSelectAll() {\r\n    const box = document.getElementsByClassName(\"indiv-check-box\");\r\n    for (var i = 0; i < count; i++) {\r\n      box[i].checked = false;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-container\">\r\n      <TaskHeader onClick={addCard} name={props.name} />\r\n      <div className=\"select-all-container \">\r\n        <input\r\n          id=\"select-all\"\r\n          type=\"checkbox\"\r\n          onChange={checkboxClick}\r\n          className=\"check-box\"\r\n        />\r\n        <label htmlFor=\"select-all\">Sélectionner tout</label>\r\n      </div>\r\n      {/* // count is changed to Array.\r\n  //Using map function on count, TaskCard component will be render to the Task section */}\r\n      <div className=\"all-tasks-container\">\r\n        {[...Array(count)].map((_, index) => (\r\n          <TaskCard key={index} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","// This component handles the rendering of the appropriate components\r\n//when the left menu buttons/tabs are clicked\r\n//usestate handles the state for onClick event\r\n//If the elementId is Tâches then Task component is rendered\r\n//else TemPage component is rendered that will display the message\r\n//\"Page under development\" to the user\r\n// Journaux component is also rendered here\r\n// the main component is then rendered in index.js in the public folder where there is root\r\n\r\nimport { React, useState } from \"react\";\r\nimport \"./Main.css\";\r\nimport Journaux from \"./Journaux\";\r\nimport LeftMenu from \"./LeftMenu\";\r\nimport Task from \"./Task\";\r\nimport TempPage from \"./TempPage\";\r\n\r\nfunction Main() {\r\n  const [elementId, setElementId] = useState(\"Tâches\");\r\n  // const [isClicked, setClicked] = useState(true);\r\n\r\n  function renderSection(event) {\r\n    setElementId(event.target.id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <LeftMenu onClick={renderSection} clickedItem={elementId} />\r\n      {elementId === \"Tâches\" ? (\r\n        <Task name={elementId} />\r\n      ) : (\r\n        <TempPage name={elementId} calledFrom=\"leftmenu\" />\r\n      )}\r\n      <Journaux />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport Header from \"../src/components/Header\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}